-------- NEW RUN --------

¤--> Sunday 22:00, Update loop: 0

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 75
Thor hunger: 50
Thor fatigue: 50
Thor social: 75

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 73
Thor hunger: 49
Thor fatigue: 49
Thor social: 72

¤--> Sunday 23:00, Update loop: 1

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 73
Thor hunger: 49
Thor fatigue: 49
Thor social: 72

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 71
Thor hunger: 48
Thor fatigue: 48
Thor social: 69

¤--> Monday 00:00, Update loop: 2

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 71
Thor hunger: 48
Thor fatigue: 48
Thor social: 69

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 69
Thor hunger: 47
Thor fatigue: 47
Thor social: 66

¤--> Monday 01:00, Update loop: 3

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 69
Thor hunger: 47
Thor fatigue: 47
Thor social: 66

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 67
Thor hunger: 46
Thor fatigue: 46
Thor social: 63

¤--> Monday 02:00, Update loop: 4

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 67
Thor hunger: 46
Thor fatigue: 46
Thor social: 63

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 65
Thor hunger: 45
Thor fatigue: 45
Thor social: 60

¤--> Monday 03:00, Update loop: 5

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 65
Thor hunger: 45
Thor fatigue: 45
Thor social: 60

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 63
Thor hunger: 44
Thor fatigue: 44
Thor social: 57

¤--> Monday 04:00, Update loop: 6

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 63
Thor hunger: 44
Thor fatigue: 44
Thor social: 57

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 61
Thor hunger: 43
Thor fatigue: 43
Thor social: 54

¤--> Monday 05:00, Update loop: 7

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 61
Thor hunger: 43
Thor fatigue: 43
Thor social: 54

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 59
Thor hunger: 42
Thor fatigue: 42
Thor social: 51

¤--> Monday 06:00, Update loop: 8

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 59
Thor hunger: 42
Thor fatigue: 42
Thor social: 51

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 57
Thor hunger: 41
Thor fatigue: 41
Thor social: 48

¤--> Monday 07:00, Update loop: 9

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 57
Thor hunger: 41
Thor fatigue: 41
Thor social: 48

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 55
Thor hunger: 40
Thor fatigue: 40
Thor social: 45

¤--> Monday 08:00, Update loop: 10

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 55
Thor hunger: 40
Thor fatigue: 40
Thor social: 45

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 53
Thor hunger: 39
Thor fatigue: 39
Thor social: 42

¤--> Monday 09:00, Update loop: 11

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 53
Thor hunger: 39
Thor fatigue: 39
Thor social: 42

<update>
At loop 11, Thor sent message to Thor with message: MSG.GoWork. Delay: 0
At loop 11, Thor recieved message from Thor with message: MSG.GoWork. Dispatch time: 0
<class 'entity_thor.Thor'> transition from <class 'entity_thor.ThorAtHome'> to <class 'entity_thor.ThorTraverse'>
At loop 11, Thor sent message to Thor with message: MSG.ArriveWork. Delay: 1

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorTraverse'>
Thor previous state: <class 'entity_thor.ThorAtHome'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 51
Thor hunger: 38
Thor fatigue: 38
Thor social: 39

¤--> Monday 10:00, Update loop: 12

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorTraverse'>
Thor previous state: <class 'entity_thor.ThorAtHome'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 51
Thor hunger: 38
Thor fatigue: 38
Thor social: 39

<update>
At loop 12, Thor recieved message from Thor with message: MSG.ArriveWork. Dispatch time: 12
<class 'entity_thor.Thor'> transition from <class 'entity_thor.ThorTraverse'> to <class 'entity_thor.ThorAtWork'>
<class 'entity_thor.Thor'> transition from <class 'entity_thor.ThorAtWork'> to <class 'entity_thor.ThorTraverse'>
At loop 12, Thor sent message to Thor with message: MSG.ArriveStore. Delay: 1

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorTraverse'>
Thor previous state: <class 'entity_thor.ThorAtWork'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 49
Thor hunger: 37
Thor fatigue: 37
Thor social: 36

¤--> Monday 11:00, Update loop: 13

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorTraverse'>
Thor previous state: <class 'entity_thor.ThorAtWork'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 49
Thor hunger: 37
Thor fatigue: 37
Thor social: 36

<update>
At loop 13, Thor recieved message from Thor with message: MSG.ArriveStore. Dispatch time: 13
<class 'entity_thor.Thor'> transition from <class 'entity_thor.ThorTraverse'> to <class 'entity_thor.ThorAtStore'>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtStore'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 47
Thor hunger: 36
Thor fatigue: 36
Thor social: 33

¤--> Monday 12:00, Update loop: 14

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtStore'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 47
Thor hunger: 36
Thor fatigue: 36
Thor social: 33

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtStore'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 45
Thor hunger: 35
Thor fatigue: 35
Thor social: 30

¤--> Monday 13:00, Update loop: 15

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtStore'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 45
Thor hunger: 35
Thor fatigue: 35
Thor social: 30

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtStore'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 43
Thor hunger: 34
Thor fatigue: 34
Thor social: 27

¤--> Monday 14:00, Update loop: 16

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtStore'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 43
Thor hunger: 34
Thor fatigue: 34
Thor social: 27

<update>
<class 'entity_thor.Thor'> transition from <class 'entity_thor.ThorAtStore'> to <class 'entity_thor.ThorTraverse'>
At loop 16, Thor sent message to Thor with message: MSG.ArriveWork. Delay: 1

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorTraverse'>
Thor previous state: <class 'entity_thor.ThorAtStore'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', True)])
Thor money: 5
Thor thirst: 41
Thor hunger: 33
Thor fatigue: 33
Thor social: 24

¤--> Monday 15:00, Update loop: 17

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorTraverse'>
Thor previous state: <class 'entity_thor.ThorAtStore'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', True)])
Thor money: 5
Thor thirst: 41
Thor hunger: 33
Thor fatigue: 33
Thor social: 24

<update>
At loop 17, Thor recieved message from Thor with message: MSG.ArriveWork. Dispatch time: 17
<class 'entity_thor.Thor'> transition from <class 'entity_thor.ThorTraverse'> to <class 'entity_thor.ThorAtWork'>
<class 'entity_thor.Thor'> transition from <class 'entity_thor.ThorAtWork'> to <class 'entity_thor.ThorTraverse'>
At loop 17, Thor sent message to Thor with message: MSG.ArriveHome. Delay: 1

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorTraverse'>
Thor previous state: <class 'entity_thor.ThorAtWork'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', True)])
Thor money: 5
Thor thirst: 39
Thor hunger: 32
Thor fatigue: 32
Thor social: 21

¤--> Monday 16:00, Update loop: 18

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorTraverse'>
Thor previous state: <class 'entity_thor.ThorAtWork'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', True)])
Thor money: 5
Thor thirst: 39
Thor hunger: 32
Thor fatigue: 32
Thor social: 21

<update>
At loop 18, Thor recieved message from Thor with message: MSG.ArriveHome. Dispatch time: 18
<class 'entity_thor.Thor'> transition from <class 'entity_thor.ThorTraverse'> to <class 'entity_thor.ThorAtHome'>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', True)])
Thor money: 5
Thor thirst: 37
Thor hunger: 31
Thor fatigue: 31
Thor social: 18

¤--> Monday 17:00, Update loop: 19

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', True)])
Thor money: 5
Thor thirst: 37
Thor hunger: 31
Thor fatigue: 31
Thor social: 18

<update>
-------- NEW RUN --------

¤--> Sunday 22:00, Update loop: 0

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 75
Thor hunger: 50
Thor fatigue: 50
Thor social: 75

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 73
Thor hunger: 49
Thor fatigue: 49
Thor social: 72

¤--> Sunday 23:00, Update loop: 1

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 73
Thor hunger: 49
Thor fatigue: 49
Thor social: 72

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 71
Thor hunger: 48
Thor fatigue: 48
Thor social: 69

¤--> Monday 00:00, Update loop: 2

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 71
Thor hunger: 48
Thor fatigue: 48
Thor social: 69

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 69
Thor hunger: 47
Thor fatigue: 47
Thor social: 66

¤--> Monday 01:00, Update loop: 3

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 69
Thor hunger: 47
Thor fatigue: 47
Thor social: 66

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 67
Thor hunger: 46
Thor fatigue: 46
Thor social: 63

¤--> Monday 02:00, Update loop: 4

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 67
Thor hunger: 46
Thor fatigue: 46
Thor social: 63

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 65
Thor hunger: 45
Thor fatigue: 45
Thor social: 60

¤--> Monday 03:00, Update loop: 5

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 65
Thor hunger: 45
Thor fatigue: 45
Thor social: 60

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 63
Thor hunger: 44
Thor fatigue: 44
Thor social: 57

¤--> Monday 04:00, Update loop: 6

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 63
Thor hunger: 44
Thor fatigue: 44
Thor social: 57

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 61
Thor hunger: 43
Thor fatigue: 43
Thor social: 54

¤--> Monday 05:00, Update loop: 7

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 61
Thor hunger: 43
Thor fatigue: 43
Thor social: 54

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 59
Thor hunger: 42
Thor fatigue: 42
Thor social: 51

¤--> Monday 06:00, Update loop: 8

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 59
Thor hunger: 42
Thor fatigue: 42
Thor social: 51

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 57
Thor hunger: 41
Thor fatigue: 41
Thor social: 48

¤--> Monday 07:00, Update loop: 9

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 57
Thor hunger: 41
Thor fatigue: 41
Thor social: 48

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 55
Thor hunger: 40
Thor fatigue: 40
Thor social: 45

¤--> Monday 08:00, Update loop: 10

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 55
Thor hunger: 40
Thor fatigue: 40
Thor social: 45

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 53
Thor hunger: 39
Thor fatigue: 39
Thor social: 42

¤--> Monday 09:00, Update loop: 11

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 53
Thor hunger: 39
Thor fatigue: 39
Thor social: 42

<update>
At loop 11, Thor sent message to Thor with message: MSG.GoWork. Delay: 0
At loop 11, Thor recieved message from Thor with message: MSG.GoWork. Dispatch time: 0
<class 'entity_thor.Thor'> transition from <class 'entity_thor.ThorAtHome'> to <class 'entity_thor.ThorTraverse'>
At loop 11, Thor sent message to Thor with message: MSG.ArriveWork. Delay: 1

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorTraverse'>
Thor previous state: <class 'entity_thor.ThorAtHome'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 51
Thor hunger: 38
Thor fatigue: 38
Thor social: 39

¤--> Monday 10:00, Update loop: 12

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorTraverse'>
Thor previous state: <class 'entity_thor.ThorAtHome'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 51
Thor hunger: 38
Thor fatigue: 38
Thor social: 39

<update>
At loop 12, Thor recieved message from Thor with message: MSG.ArriveWork. Dispatch time: 12
<class 'entity_thor.Thor'> transition from <class 'entity_thor.ThorTraverse'> to <class 'entity_thor.ThorAtWork'>
<class 'entity_thor.Thor'> transition from <class 'entity_thor.ThorAtWork'> to <class 'entity_thor.ThorTraverse'>
At loop 12, Thor sent message to Thor with message: MSG.ArriveStore. Delay: 1

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorTraverse'>
Thor previous state: <class 'entity_thor.ThorAtWork'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 49
Thor hunger: 37
Thor fatigue: 37
Thor social: 36

¤--> Monday 11:00, Update loop: 13

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorTraverse'>
Thor previous state: <class 'entity_thor.ThorAtWork'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 49
Thor hunger: 37
Thor fatigue: 37
Thor social: 36

<update>
At loop 13, Thor recieved message from Thor with message: MSG.ArriveStore. Dispatch time: 13
<class 'entity_thor.Thor'> transition from <class 'entity_thor.ThorTraverse'> to <class 'entity_thor.ThorAtStore'>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtStore'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 47
Thor hunger: 36
Thor fatigue: 36
Thor social: 33

¤--> Monday 12:00, Update loop: 14

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtStore'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 47
Thor hunger: 36
Thor fatigue: 36
Thor social: 33

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtStore'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 45
Thor hunger: 35
Thor fatigue: 35
Thor social: 30

¤--> Monday 13:00, Update loop: 15

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtStore'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 45
Thor hunger: 35
Thor fatigue: 35
Thor social: 30

<update>
<class 'entity_thor.Thor'> transition from <class 'entity_thor.ThorAtStore'> to <class 'entity_thor.ThorTraverse'>
At loop 15, Thor sent message to Thor with message: MSG.ArriveWork. Delay: 1

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorTraverse'>
Thor previous state: <class 'entity_thor.ThorAtStore'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', True)])
Thor money: 5
Thor thirst: 43
Thor hunger: 34
Thor fatigue: 34
Thor social: 27

¤--> Monday 14:00, Update loop: 16

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorTraverse'>
Thor previous state: <class 'entity_thor.ThorAtStore'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', True)])
Thor money: 5
Thor thirst: 43
Thor hunger: 34
Thor fatigue: 34
Thor social: 27

<update>
At loop 16, Thor recieved message from Thor with message: MSG.ArriveWork. Dispatch time: 16
<class 'entity_thor.Thor'> transition from <class 'entity_thor.ThorTraverse'> to <class 'entity_thor.ThorAtWork'>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtWork'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', True)])
Thor money: 10
Thor thirst: 41
Thor hunger: 33
Thor fatigue: 33
Thor social: 24

¤--> Monday 15:00, Update loop: 17

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtWork'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', True)])
Thor money: 10
Thor thirst: 41
Thor hunger: 33
Thor fatigue: 33
Thor social: 24

<update>
<class 'entity_thor.Thor'> transition from <class 'entity_thor.ThorAtWork'> to <class 'entity_thor.ThorTraverse'>
At loop 17, Thor sent message to Thor with message: MSG.ArriveHome. Delay: 1

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorTraverse'>
Thor previous state: <class 'entity_thor.ThorAtWork'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', True)])
Thor money: 10
Thor thirst: 39
Thor hunger: 32
Thor fatigue: 32
Thor social: 21

¤--> Monday 16:00, Update loop: 18

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorTraverse'>
Thor previous state: <class 'entity_thor.ThorAtWork'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', True)])
Thor money: 10
Thor thirst: 39
Thor hunger: 32
Thor fatigue: 32
Thor social: 21

<update>
At loop 18, Thor recieved message from Thor with message: MSG.ArriveHome. Dispatch time: 18
<class 'entity_thor.Thor'> transition from <class 'entity_thor.ThorTraverse'> to <class 'entity_thor.ThorAtHome'>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', True)])
Thor money: 10
Thor thirst: 37
Thor hunger: 31
Thor fatigue: 31
Thor social: 18

¤--> Monday 17:00, Update loop: 19

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', True)])
Thor money: 10
Thor thirst: 37
Thor hunger: 31
Thor fatigue: 31
Thor social: 18

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', True)])
Thor money: 10
Thor thirst: 35
Thor hunger: 30
Thor fatigue: 30
Thor social: 15

¤--> Monday 18:00, Update loop: 20

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', True)])
Thor money: 10
Thor thirst: 35
Thor hunger: 30
Thor fatigue: 30
Thor social: 15

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', True)])
Thor money: 10
Thor thirst: 33
Thor hunger: 29
Thor fatigue: 29
Thor social: 12

¤--> Monday 19:00, Update loop: 21

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', True)])
Thor money: 10
Thor thirst: 33
Thor hunger: 29
Thor fatigue: 29
Thor social: 12

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', True)])
Thor money: 10
Thor thirst: 31
Thor hunger: 28
Thor fatigue: 28
Thor social: 9

¤--> Monday 20:00, Update loop: 22

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', True)])
Thor money: 10
Thor thirst: 31
Thor hunger: 28
Thor fatigue: 28
Thor social: 9

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', True)])
Thor money: 10
Thor thirst: 29
Thor hunger: 27
Thor fatigue: 27
Thor social: 6

¤--> Monday 21:00, Update loop: 23

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', True)])
Thor money: 10
Thor thirst: 29
Thor hunger: 27
Thor fatigue: 27
Thor social: 6

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', True)])
Thor money: 10
Thor thirst: 27
Thor hunger: 26
Thor fatigue: 26
Thor social: 3

¤--> Monday 22:00, Update loop: 24

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', True)])
Thor money: 10
Thor thirst: 27
Thor hunger: 26
Thor fatigue: 26
Thor social: 3

<update>
<class 'entity_thor.Thor'> transition from <class 'entity_thor.ThorAtHome'> to <class 'entity_thor.ThorSleep'>
At loop 24, Thor sent message to Thor with message: MSG.WakeUp. Delay: 1

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorSleep'>
Thor previous state: <class 'entity_thor.ThorAtHome'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', True)])
Thor money: 10
Thor thirst: 25
Thor hunger: 25
Thor fatigue: 25
Thor social: 0

¤--> Monday 23:00, Update loop: 25

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorSleep'>
Thor previous state: <class 'entity_thor.ThorAtHome'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', True)])
Thor money: 10
Thor thirst: 25
Thor hunger: 25
Thor fatigue: 25
Thor social: 0

<update>
At loop 25, Thor recieved message from Thor with message: MSG.WakeUp. Dispatch time: 25
<class 'entity_thor.Thor'> reverting from <class 'entity_thor.ThorSleep'> to <class 'entity_thor.ThorAtHome'>
-------- NEW RUN --------

¤--> Sunday 22:00, Update loop: 0

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 75
Thor hunger: 50
Thor fatigue: 50
Thor social: 75

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 73
Thor hunger: 49
Thor fatigue: 49
Thor social: 72

¤--> Sunday 23:00, Update loop: 1

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 73
Thor hunger: 49
Thor fatigue: 49
Thor social: 72

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 71
Thor hunger: 48
Thor fatigue: 48
Thor social: 69

¤--> Monday 00:00, Update loop: 2

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 71
Thor hunger: 48
Thor fatigue: 48
Thor social: 69

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 69
Thor hunger: 47
Thor fatigue: 47
Thor social: 66

¤--> Monday 01:00, Update loop: 3

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 69
Thor hunger: 47
Thor fatigue: 47
Thor social: 66

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 67
Thor hunger: 46
Thor fatigue: 46
Thor social: 63

¤--> Monday 02:00, Update loop: 4

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 67
Thor hunger: 46
Thor fatigue: 46
Thor social: 63

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 65
Thor hunger: 45
Thor fatigue: 45
Thor social: 60

¤--> Monday 03:00, Update loop: 5

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 65
Thor hunger: 45
Thor fatigue: 45
Thor social: 60

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 63
Thor hunger: 44
Thor fatigue: 44
Thor social: 57

¤--> Monday 04:00, Update loop: 6

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 63
Thor hunger: 44
Thor fatigue: 44
Thor social: 57

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 61
Thor hunger: 43
Thor fatigue: 43
Thor social: 54

¤--> Monday 05:00, Update loop: 7

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 61
Thor hunger: 43
Thor fatigue: 43
Thor social: 54

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 59
Thor hunger: 42
Thor fatigue: 42
Thor social: 51

¤--> Monday 06:00, Update loop: 8

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 59
Thor hunger: 42
Thor fatigue: 42
Thor social: 51

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 57
Thor hunger: 41
Thor fatigue: 41
Thor social: 48

¤--> Monday 07:00, Update loop: 9

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 57
Thor hunger: 41
Thor fatigue: 41
Thor social: 48

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 55
Thor hunger: 40
Thor fatigue: 40
Thor social: 45

¤--> Monday 08:00, Update loop: 10

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 55
Thor hunger: 40
Thor fatigue: 40
Thor social: 45

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 53
Thor hunger: 39
Thor fatigue: 39
Thor social: 42

¤--> Monday 09:00, Update loop: 11

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 53
Thor hunger: 39
Thor fatigue: 39
Thor social: 42

<update>
At loop 11, Thor sent message to Thor with message: MSG.GoWork. Delay: 0
At loop 11, Thor recieved message from Thor with message: MSG.GoWork. Dispatch time: 0
<class 'entity_thor.Thor'> transition from <class 'entity_thor.ThorAtHome'> to <class 'entity_thor.ThorTraverse'>
At loop 11, Thor sent message to Thor with message: MSG.ArriveWork. Delay: 1

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorTraverse'>
Thor previous state: <class 'entity_thor.ThorAtHome'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 51
Thor hunger: 38
Thor fatigue: 38
Thor social: 39

¤--> Monday 10:00, Update loop: 12

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorTraverse'>
Thor previous state: <class 'entity_thor.ThorAtHome'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 51
Thor hunger: 38
Thor fatigue: 38
Thor social: 39

<update>
At loop 12, Thor recieved message from Thor with message: MSG.ArriveWork. Dispatch time: 12
<class 'entity_thor.Thor'> transition from <class 'entity_thor.ThorTraverse'> to <class 'entity_thor.ThorAtWork'>
<class 'entity_thor.Thor'> transition from <class 'entity_thor.ThorAtWork'> to <class 'entity_thor.ThorTraverse'>
At loop 12, Thor sent message to Thor with message: MSG.ArriveStore. Delay: 1

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorTraverse'>
Thor previous state: <class 'entity_thor.ThorAtWork'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 49
Thor hunger: 37
Thor fatigue: 37
Thor social: 36

¤--> Monday 11:00, Update loop: 13

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorTraverse'>
Thor previous state: <class 'entity_thor.ThorAtWork'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 49
Thor hunger: 37
Thor fatigue: 37
Thor social: 36

<update>
At loop 13, Thor recieved message from Thor with message: MSG.ArriveStore. Dispatch time: 13
<class 'entity_thor.Thor'> transition from <class 'entity_thor.ThorTraverse'> to <class 'entity_thor.ThorAtStore'>
<class 'entity_thor.Thor'> transition from <class 'entity_thor.ThorAtStore'> to <class 'entity_thor.ThorTraverse'>
At loop 13, Thor sent message to Thor with message: MSG.ArriveWork. Delay: 1

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorTraverse'>
Thor previous state: <class 'entity_thor.ThorAtStore'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', True)])
Thor money: 5
Thor thirst: 47
Thor hunger: 36
Thor fatigue: 36
Thor social: 33

¤--> Monday 12:00, Update loop: 14

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorTraverse'>
Thor previous state: <class 'entity_thor.ThorAtStore'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', True)])
Thor money: 5
Thor thirst: 47
Thor hunger: 36
Thor fatigue: 36
Thor social: 33

<update>
At loop 14, Thor recieved message from Thor with message: MSG.ArriveWork. Dispatch time: 14
<class 'entity_thor.Thor'> transition from <class 'entity_thor.ThorTraverse'> to <class 'entity_thor.ThorAtWork'>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtWork'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', True)])
Thor money: 10
Thor thirst: 45
Thor hunger: 35
Thor fatigue: 35
Thor social: 30

¤--> Monday 13:00, Update loop: 15

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtWork'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', True)])
Thor money: 10
Thor thirst: 45
Thor hunger: 35
Thor fatigue: 35
Thor social: 30

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtWork'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 15
Thor thirst: 43
Thor hunger: 34
Thor fatigue: 34
Thor social: 27

¤--> Monday 14:00, Update loop: 16

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtWork'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 15
Thor thirst: 43
Thor hunger: 34
Thor fatigue: 34
Thor social: 27

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtWork'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 17
Thor thirst: 41
Thor hunger: 33
Thor fatigue: 33
Thor social: 24

¤--> Monday 15:00, Update loop: 17

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtWork'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 17
Thor thirst: 41
Thor hunger: 33
Thor fatigue: 33
Thor social: 24

<update>
<class 'entity_thor.Thor'> transition from <class 'entity_thor.ThorAtWork'> to <class 'entity_thor.ThorTraverse'>
At loop 17, Thor sent message to Thor with message: MSG.ArriveHome. Delay: 1

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorTraverse'>
Thor previous state: <class 'entity_thor.ThorAtWork'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 17
Thor thirst: 39
Thor hunger: 32
Thor fatigue: 32
Thor social: 21

¤--> Monday 16:00, Update loop: 18

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorTraverse'>
Thor previous state: <class 'entity_thor.ThorAtWork'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 17
Thor thirst: 39
Thor hunger: 32
Thor fatigue: 32
Thor social: 21

<update>
At loop 18, Thor recieved message from Thor with message: MSG.ArriveHome. Dispatch time: 18
<class 'entity_thor.Thor'> transition from <class 'entity_thor.ThorTraverse'> to <class 'entity_thor.ThorAtHome'>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 17
Thor thirst: 37
Thor hunger: 31
Thor fatigue: 31
Thor social: 18

¤--> Monday 17:00, Update loop: 19

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 17
Thor thirst: 37
Thor hunger: 31
Thor fatigue: 31
Thor social: 18

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 17
Thor thirst: 35
Thor hunger: 30
Thor fatigue: 30
Thor social: 15

¤--> Monday 18:00, Update loop: 20

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 17
Thor thirst: 35
Thor hunger: 30
Thor fatigue: 30
Thor social: 15

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 17
Thor thirst: 33
Thor hunger: 29
Thor fatigue: 29
Thor social: 12

¤--> Monday 19:00, Update loop: 21

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 17
Thor thirst: 33
Thor hunger: 29
Thor fatigue: 29
Thor social: 12

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 17
Thor thirst: 31
Thor hunger: 28
Thor fatigue: 28
Thor social: 9

¤--> Monday 20:00, Update loop: 22

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 17
Thor thirst: 31
Thor hunger: 28
Thor fatigue: 28
Thor social: 9

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 17
Thor thirst: 29
Thor hunger: 27
Thor fatigue: 27
Thor social: 6

¤--> Monday 21:00, Update loop: 23

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 17
Thor thirst: 29
Thor hunger: 27
Thor fatigue: 27
Thor social: 6

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 17
Thor thirst: 27
Thor hunger: 26
Thor fatigue: 26
Thor social: 3

¤--> Monday 22:00, Update loop: 24

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 17
Thor thirst: 27
Thor hunger: 26
Thor fatigue: 26
Thor social: 3

<update>
<class 'entity_thor.Thor'> transition from <class 'entity_thor.ThorAtHome'> to <class 'entity_thor.ThorSleep'>
At loop 24, Thor sent message to Thor with message: MSG.WakeUp. Delay: 1

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorSleep'>
Thor previous state: <class 'entity_thor.ThorAtHome'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 17
Thor thirst: 25
Thor hunger: 25
Thor fatigue: 25
Thor social: 0

¤--> Monday 23:00, Update loop: 25

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorSleep'>
Thor previous state: <class 'entity_thor.ThorAtHome'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 17
Thor thirst: 25
Thor hunger: 25
Thor fatigue: 25
Thor social: 0

<update>
At loop 25, Thor recieved message from Thor with message: MSG.WakeUp. Dispatch time: 25
<class 'entity_thor.Thor'> reverting from <class 'entity_thor.ThorSleep'> to <class 'entity_thor.ThorAtHome'>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorAtHome'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 17
Thor thirst: 23
Thor hunger: 24
Thor fatigue: 59
Thor social: -3

¤--> Tuesday 00:00, Update loop: 26

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorAtHome'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 17
Thor thirst: 23
Thor hunger: 24
Thor fatigue: 59
Thor social: -3

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorAtHome'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 17
Thor thirst: 21
Thor hunger: 23
Thor fatigue: 58
Thor social: -6

¤--> Tuesday 01:00, Update loop: 27

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorAtHome'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 17
Thor thirst: 21
Thor hunger: 23
Thor fatigue: 58
Thor social: -6

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorAtHome'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 17
Thor thirst: 19
Thor hunger: 22
Thor fatigue: 57
Thor social: -9

¤--> Tuesday 02:00, Update loop: 28

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorAtHome'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 17
Thor thirst: 19
Thor hunger: 22
Thor fatigue: 57
Thor social: -9

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorAtHome'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 17
Thor thirst: 17
Thor hunger: 21
Thor fatigue: 56
Thor social: -12

¤--> Tuesday 03:00, Update loop: 29

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorAtHome'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 17
Thor thirst: 17
Thor hunger: 21
Thor fatigue: 56
Thor social: -12

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorAtHome'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 17
Thor thirst: 15
Thor hunger: 20
Thor fatigue: 55
Thor social: -15

¤--> Tuesday 04:00, Update loop: 30

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorAtHome'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 17
Thor thirst: 15
Thor hunger: 20
Thor fatigue: 55
Thor social: -15

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorAtHome'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 17
Thor thirst: 13
Thor hunger: 19
Thor fatigue: 54
Thor social: -18

¤--> Tuesday 05:00, Update loop: 31

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorAtHome'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 17
Thor thirst: 13
Thor hunger: 19
Thor fatigue: 54
Thor social: -18

<update>
-------- NEW RUN --------

¤--> Sunday 22:00, Update loop: 0

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 75
Thor hunger: 50
Thor fatigue: 50
Thor social: 75

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 73
Thor hunger: 49
Thor fatigue: 49
Thor social: 72

¤--> Sunday 23:00, Update loop: 1

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 73
Thor hunger: 49
Thor fatigue: 49
Thor social: 72

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 71
Thor hunger: 48
Thor fatigue: 48
Thor social: 69

¤--> Monday 00:00, Update loop: 2

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 71
Thor hunger: 48
Thor fatigue: 48
Thor social: 69

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 69
Thor hunger: 47
Thor fatigue: 47
Thor social: 66

¤--> Monday 01:00, Update loop: 3

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 69
Thor hunger: 47
Thor fatigue: 47
Thor social: 66

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 67
Thor hunger: 46
Thor fatigue: 46
Thor social: 63

¤--> Monday 02:00, Update loop: 4

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 67
Thor hunger: 46
Thor fatigue: 46
Thor social: 63

<update>
<class 'entity_hulk.Hulk'> transition from <class 'entity_hulk.HulkAtHome'> to <class 'entity_hulk.HulkAtHomeSleep'>
At loop 4, Hulk sent message to Hulk with message: MSG.WakeUp. Delay: 5

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 65
Thor hunger: 45
Thor fatigue: 45
Thor social: 60

¤--> Monday 03:00, Update loop: 5

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 65
Thor hunger: 45
Thor fatigue: 45
Thor social: 60

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 63
Thor hunger: 44
Thor fatigue: 44
Thor social: 57

¤--> Monday 04:00, Update loop: 6

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 63
Thor hunger: 44
Thor fatigue: 44
Thor social: 57

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 61
Thor hunger: 43
Thor fatigue: 43
Thor social: 54

¤--> Monday 05:00, Update loop: 7

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 61
Thor hunger: 43
Thor fatigue: 43
Thor social: 54

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 59
Thor hunger: 42
Thor fatigue: 42
Thor social: 51

¤--> Monday 06:00, Update loop: 8

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 59
Thor hunger: 42
Thor fatigue: 42
Thor social: 51

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 57
Thor hunger: 41
Thor fatigue: 41
Thor social: 48

¤--> Monday 07:00, Update loop: 9

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 57
Thor hunger: 41
Thor fatigue: 41
Thor social: 48

<update>
At loop 9, Hulk recieved message from Hulk with message: MSG.WakeUp. Dispatch time: 9
<class 'entity_hulk.Hulk'> reverting from <class 'entity_hulk.HulkAtHomeSleep'> to <class 'entity_hulk.HulkAtHome'>
At loop 9, Hulk sent message to Hulk with message: MSG.GoWork. Delay: 1

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 55
Thor hunger: 40
Thor fatigue: 40
Thor social: 45

¤--> Monday 08:00, Update loop: 10

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 55
Thor hunger: 40
Thor fatigue: 40
Thor social: 45

<update>
At loop 10, Hulk recieved message from Hulk with message: MSG.GoWork. Dispatch time: 10
<class 'entity_hulk.Hulk'> transition from <class 'entity_hulk.HulkAtHome'> to <class 'entity_hulk.HulkTraverse'>
At loop 10, Hulk sent message to Hulk with message: MSG.ArriveWork. Delay: 2
<class 'entity_rocket.Rocket'> transition from <class 'entity_rocket.RocketAtWork'> to <class 'entity_rocket.RocketTraverse'>
At loop 10, Rocket sent message to Rocket with message: MSG.ArriveHome. Delay: 2

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 53
Thor hunger: 39
Thor fatigue: 39
Thor social: 42

¤--> Monday 09:00, Update loop: 11

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 53
Thor hunger: 39
Thor fatigue: 39
Thor social: 42

<update>
At loop 11, Thor sent message to Thor with message: MSG.GoWork. Delay: 0
At loop 11, Thor recieved message from Thor with message: MSG.GoWork. Dispatch time: 0
<class 'entity_thor.Thor'> transition from <class 'entity_thor.ThorAtHome'> to <class 'entity_thor.ThorTraverse'>
At loop 11, Thor sent message to Thor with message: MSG.ArriveWork. Delay: 1

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorTraverse'>
Thor previous state: <class 'entity_thor.ThorAtHome'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 51
Thor hunger: 38
Thor fatigue: 38
Thor social: 39

¤--> Monday 10:00, Update loop: 12

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorTraverse'>
Thor previous state: <class 'entity_thor.ThorAtHome'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 51
Thor hunger: 38
Thor fatigue: 38
Thor social: 39

<update>
At loop 12, Thor recieved message from Thor with message: MSG.ArriveWork. Dispatch time: 12
<class 'entity_thor.Thor'> transition from <class 'entity_thor.ThorTraverse'> to <class 'entity_thor.ThorAtWork'>
At loop 12, Rocket recieved message from Rocket with message: MSG.ArriveHome. Dispatch time: 12
<class 'entity_rocket.Rocket'> transition from <class 'entity_rocket.RocketTraverse'> to <class 'entity_rocket.RocketAtHome'>
<class 'entity_rocket.Rocket'> transition from <class 'entity_rocket.RocketAtHome'> to <class 'entity_rocket.RocketAtHomeSleep'>
<class 'entity_thor.Thor'> transition from <class 'entity_thor.ThorAtWork'> to <class 'entity_thor.ThorTraverse'>
At loop 12, Thor sent message to Thor with message: MSG.ArriveStore. Delay: 1

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorTraverse'>
Thor previous state: <class 'entity_thor.ThorAtWork'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 49
Thor hunger: 37
Thor fatigue: 37
Thor social: 36

¤--> Monday 11:00, Update loop: 13

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorTraverse'>
Thor previous state: <class 'entity_thor.ThorAtWork'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 49
Thor hunger: 37
Thor fatigue: 37
Thor social: 36

<update>
At loop 13, Thor recieved message from Thor with message: MSG.ArriveStore. Dispatch time: 13
<class 'entity_thor.Thor'> transition from <class 'entity_thor.ThorTraverse'> to <class 'entity_thor.ThorAtStore'>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtStore'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 47
Thor hunger: 36
Thor fatigue: 36
Thor social: 33

¤--> Monday 12:00, Update loop: 14

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtStore'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 47
Thor hunger: 36
Thor fatigue: 36
Thor social: 33

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtStore'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 45
Thor hunger: 35
Thor fatigue: 35
Thor social: 30

¤--> Monday 13:00, Update loop: 15

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtStore'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 45
Thor hunger: 35
Thor fatigue: 35
Thor social: 30

<update>
<class 'entity_thor.Thor'> transition from <class 'entity_thor.ThorAtStore'> to <class 'entity_thor.ThorTraverse'>
At loop 15, Thor sent message to Thor with message: MSG.ArriveWork. Delay: 1

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorTraverse'>
Thor previous state: <class 'entity_thor.ThorAtStore'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 43
Thor hunger: 34
Thor fatigue: 34
Thor social: 27

¤--> Monday 14:00, Update loop: 16

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorTraverse'>
Thor previous state: <class 'entity_thor.ThorAtStore'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 43
Thor hunger: 34
Thor fatigue: 34
Thor social: 27

<update>
At loop 16, Thor recieved message from Thor with message: MSG.ArriveWork. Dispatch time: 16
<class 'entity_thor.Thor'> transition from <class 'entity_thor.ThorTraverse'> to <class 'entity_thor.ThorAtWork'>
<class 'entity_thor.Thor'> transition from <class 'entity_thor.ThorAtWork'> to <class 'entity_thor.ThorTraverse'>
At loop 16, Thor sent message to Thor with message: MSG.ArriveStore. Delay: 1

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorTraverse'>
Thor previous state: <class 'entity_thor.ThorAtWork'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 41
Thor hunger: 33
Thor fatigue: 33
Thor social: 24

¤--> Monday 15:00, Update loop: 17

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorTraverse'>
Thor previous state: <class 'entity_thor.ThorAtWork'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 41
Thor hunger: 33
Thor fatigue: 33
Thor social: 24

<update>
At loop 17, Thor recieved message from Thor with message: MSG.ArriveStore. Dispatch time: 17
<class 'entity_thor.Thor'> transition from <class 'entity_thor.ThorTraverse'> to <class 'entity_thor.ThorAtStore'>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtStore'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 39
Thor hunger: 32
Thor fatigue: 32
Thor social: 21

¤--> Monday 16:00, Update loop: 18

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtStore'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 39
Thor hunger: 32
Thor fatigue: 32
Thor social: 21

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtStore'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 37
Thor hunger: 31
Thor fatigue: 31
Thor social: 18

¤--> Monday 17:00, Update loop: 19

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtStore'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 37
Thor hunger: 31
Thor fatigue: 31
Thor social: 18

<update>
<class 'entity_thor.Thor'> transition from <class 'entity_thor.ThorAtStore'> to <class 'entity_thor.ThorTraverse'>
At loop 19, Thor sent message to Thor with message: MSG.ArriveWork. Delay: 1

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorTraverse'>
Thor previous state: <class 'entity_thor.ThorAtStore'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 35
Thor hunger: 30
Thor fatigue: 30
Thor social: 15

¤--> Monday 18:00, Update loop: 20

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorTraverse'>
Thor previous state: <class 'entity_thor.ThorAtStore'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 35
Thor hunger: 30
Thor fatigue: 30
Thor social: 15

<update>
At loop 20, Thor recieved message from Thor with message: MSG.ArriveWork. Dispatch time: 20
<class 'entity_thor.Thor'> transition from <class 'entity_thor.ThorTraverse'> to <class 'entity_thor.ThorAtWork'>
At loop 20, Rocket sent message to Rocket with message: MSG.WakeUp. Delay: 0
<class 'entity_rocket.Rocket'> reverting from <class 'entity_rocket.RocketAtHomeSleep'> to <class 'entity_rocket.RocketAtHome'>
<class 'entity_rocket.Rocket'> transition from <class 'entity_rocket.RocketAtHome'> to <class 'entity_rocket.RocketTraverse'>
At loop 20, Rocket sent message to Rocket with message: MSG.ArriveWork. Delay: 2
<class 'entity_thor.Thor'> transition from <class 'entity_thor.ThorAtWork'> to <class 'entity_thor.ThorTraverse'>
At loop 20, Thor sent message to Thor with message: MSG.ArriveHome. Delay: 1

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorTraverse'>
Thor previous state: <class 'entity_thor.ThorAtWork'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 33
Thor hunger: 29
Thor fatigue: 29
Thor social: 12

¤--> Monday 19:00, Update loop: 21

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorTraverse'>
Thor previous state: <class 'entity_thor.ThorAtWork'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 33
Thor hunger: 29
Thor fatigue: 29
Thor social: 12

<update>
At loop 21, Thor recieved message from Thor with message: MSG.ArriveHome. Dispatch time: 21
<class 'entity_thor.Thor'> transition from <class 'entity_thor.ThorTraverse'> to <class 'entity_thor.ThorAtHome'>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 31
Thor hunger: 28
Thor fatigue: 28
Thor social: 9

¤--> Monday 20:00, Update loop: 22

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 31
Thor hunger: 28
Thor fatigue: 28
Thor social: 9

<update>
At loop 22, Rocket recieved message from Rocket with message: MSG.ArriveWork. Dispatch time: 22
<class 'entity_rocket.Rocket'> transition from <class 'entity_rocket.RocketTraverse'> to <class 'entity_rocket.RocketAtWork'>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 29
Thor hunger: 27
Thor fatigue: 27
Thor social: 6

¤--> Monday 21:00, Update loop: 23

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 29
Thor hunger: 27
Thor fatigue: 27
Thor social: 6

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 27
Thor hunger: 26
Thor fatigue: 26
Thor social: 3

¤--> Monday 22:00, Update loop: 24

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 27
Thor hunger: 26
Thor fatigue: 26
Thor social: 3

<update>
<class 'entity_thor.Thor'> transition from <class 'entity_thor.ThorAtHome'> to <class 'entity_thor.ThorSleep'>
At loop 24, Thor sent message to Thor with message: MSG.WakeUp. Delay: 1

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorSleep'>
Thor previous state: <class 'entity_thor.ThorAtHome'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 25
Thor hunger: 25
Thor fatigue: 25
Thor social: 0

¤--> Monday 23:00, Update loop: 25

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorSleep'>
Thor previous state: <class 'entity_thor.ThorAtHome'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 25
Thor hunger: 25
Thor fatigue: 25
Thor social: 0

<update>
At loop 25, Thor recieved message from Thor with message: MSG.WakeUp. Dispatch time: 25
<class 'entity_thor.Thor'> reverting from <class 'entity_thor.ThorSleep'> to <class 'entity_thor.ThorAtHome'>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorAtHome'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 23
Thor hunger: 24
Thor fatigue: 59
Thor social: -3

¤--> Tuesday 00:00, Update loop: 26

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorAtHome'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 23
Thor hunger: 24
Thor fatigue: 59
Thor social: -3

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorAtHome'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 21
Thor hunger: 23
Thor fatigue: 58
Thor social: -6

¤--> Tuesday 01:00, Update loop: 27

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorAtHome'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 21
Thor hunger: 23
Thor fatigue: 58
Thor social: -6

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorAtHome'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 19
Thor hunger: 22
Thor fatigue: 57
Thor social: -9

¤--> Tuesday 02:00, Update loop: 28

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorAtHome'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 19
Thor hunger: 22
Thor fatigue: 57
Thor social: -9

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorAtHome'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 17
Thor hunger: 21
Thor fatigue: 56
Thor social: -12

¤--> Tuesday 03:00, Update loop: 29

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorAtHome'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 17
Thor hunger: 21
Thor fatigue: 56
Thor social: -12

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorAtHome'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 15
Thor hunger: 20
Thor fatigue: 55
Thor social: -15

¤--> Tuesday 04:00, Update loop: 30

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorAtHome'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 15
Thor hunger: 20
Thor fatigue: 55
Thor social: -15

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorAtHome'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 13
Thor hunger: 19
Thor fatigue: 54
Thor social: -18

¤--> Tuesday 05:00, Update loop: 31

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorAtHome'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 13
Thor hunger: 19
Thor fatigue: 54
Thor social: -18

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorAtHome'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 11
Thor hunger: 18
Thor fatigue: 53
Thor social: -21

¤--> Tuesday 06:00, Update loop: 32

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorAtHome'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 11
Thor hunger: 18
Thor fatigue: 53
Thor social: -21

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorAtHome'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 9
Thor hunger: 17
Thor fatigue: 52
Thor social: -24

¤--> Tuesday 07:00, Update loop: 33

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorAtHome'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 9
Thor hunger: 17
Thor fatigue: 52
Thor social: -24

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorAtHome'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 7
Thor hunger: 16
Thor fatigue: 51
Thor social: -27

¤--> Tuesday 08:00, Update loop: 34

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorAtHome'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 7
Thor hunger: 16
Thor fatigue: 51
Thor social: -27

<update>
<class 'entity_rocket.Rocket'> transition from <class 'entity_rocket.RocketAtWork'> to <class 'entity_rocket.RocketTraverse'>
At loop 34, Rocket sent message to Rocket with message: MSG.ArriveHome. Delay: 2

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorAtHome'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 5
Thor hunger: 15
Thor fatigue: 50
Thor social: -30

¤--> Tuesday 09:00, Update loop: 35

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorAtHome'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 5
Thor hunger: 15
Thor fatigue: 50
Thor social: -30

<update>
At loop 35, Thor sent message to Thor with message: MSG.GoWork. Delay: 0
At loop 35, Thor recieved message from Thor with message: MSG.GoWork. Dispatch time: 0
<class 'entity_thor.Thor'> transition from <class 'entity_thor.ThorAtHome'> to <class 'entity_thor.ThorTraverse'>
At loop 35, Thor sent message to Thor with message: MSG.ArriveWork. Delay: 1

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorTraverse'>
Thor previous state: <class 'entity_thor.ThorAtHome'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 3
Thor hunger: 14
Thor fatigue: 49
Thor social: -33

¤--> Tuesday 10:00, Update loop: 36

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorTraverse'>
Thor previous state: <class 'entity_thor.ThorAtHome'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 3
Thor hunger: 14
Thor fatigue: 49
Thor social: -33

<update>
At loop 36, Thor recieved message from Thor with message: MSG.ArriveWork. Dispatch time: 36
<class 'entity_thor.Thor'> transition from <class 'entity_thor.ThorTraverse'> to <class 'entity_thor.ThorAtWork'>
At loop 36, Rocket recieved message from Rocket with message: MSG.ArriveHome. Dispatch time: 36
<class 'entity_rocket.Rocket'> transition from <class 'entity_rocket.RocketTraverse'> to <class 'entity_rocket.RocketAtHome'>
<class 'entity_thor.Thor'> transition from <class 'entity_thor.ThorAtWork'> to <class 'entity_thor.ThorTraverse'>
At loop 36, Thor sent message to Thor with message: MSG.ArriveStore. Delay: 1

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorTraverse'>
Thor previous state: <class 'entity_thor.ThorAtWork'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 1
Thor hunger: 13
Thor fatigue: 48
Thor social: -36

¤--> Tuesday 11:00, Update loop: 37

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorTraverse'>
Thor previous state: <class 'entity_thor.ThorAtWork'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 1
Thor hunger: 13
Thor fatigue: 48
Thor social: -36

<update>
At loop 37, Thor recieved message from Thor with message: MSG.ArriveStore. Dispatch time: 37
<class 'entity_thor.Thor'> transition from <class 'entity_thor.ThorTraverse'> to <class 'entity_thor.ThorAtStore'>
At loop 37, Rocket sent message to Rocket with message: MSG.PizzaDelivery. Delay: 2
<class 'entity_thor.Thor'> transition from <class 'entity_thor.ThorAtStore'> to <class 'entity_thor.ThorTraverse'>
At loop 37, Thor sent message to Thor with message: MSG.ArriveWork. Delay: 1

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorTraverse'>
Thor previous state: <class 'entity_thor.ThorAtStore'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', True)])
Thor money: 5
Thor thirst: -1
Thor hunger: 12
Thor fatigue: 47
Thor social: -39

¤--> Tuesday 12:00, Update loop: 38

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorTraverse'>
Thor previous state: <class 'entity_thor.ThorAtStore'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', True)])
Thor money: 5
Thor thirst: -1
Thor hunger: 12
Thor fatigue: 47
Thor social: -39

<update>
At loop 38, Thor recieved message from Thor with message: MSG.ArriveWork. Dispatch time: 38
<class 'entity_thor.Thor'> transition from <class 'entity_thor.ThorTraverse'> to <class 'entity_thor.ThorAtWork'>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtWork'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', True)])
Thor money: 10
Thor thirst: -3
Thor hunger: 11
Thor fatigue: 46
Thor social: -42

¤--> Tuesday 13:00, Update loop: 39

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtWork'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', True)])
Thor money: 10
Thor thirst: -3
Thor hunger: 11
Thor fatigue: 46
Thor social: -42

<update>
At loop 39, Rocket recieved message from Rocket with message: MSG.PizzaDelivery. Dispatch time: 39
-------- NEW RUN --------

¤--> Sunday 22:00, Update loop: 0

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 75
Thor hunger: 50
Thor fatigue: 50
Thor social: 75

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 73
Thor hunger: 49
Thor fatigue: 49
Thor social: 72

¤--> Sunday 23:00, Update loop: 1

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 73
Thor hunger: 49
Thor fatigue: 49
Thor social: 72

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 71
Thor hunger: 48
Thor fatigue: 48
Thor social: 69

¤--> Monday 00:00, Update loop: 2

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 71
Thor hunger: 48
Thor fatigue: 48
Thor social: 69

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 69
Thor hunger: 47
Thor fatigue: 47
Thor social: 66

¤--> Monday 01:00, Update loop: 3

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 69
Thor hunger: 47
Thor fatigue: 47
Thor social: 66

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 67
Thor hunger: 46
Thor fatigue: 46
Thor social: 63

¤--> Monday 02:00, Update loop: 4

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 67
Thor hunger: 46
Thor fatigue: 46
Thor social: 63

<update>
<class 'entity_hulk.Hulk'> transition from <class 'entity_hulk.HulkAtHome'> to <class 'entity_hulk.HulkAtHomeSleep'>
At loop 4, Hulk sent message to Hulk with message: MSG.WakeUp. Delay: 5
-------- NEW RUN --------

¤--> Sunday 22:00, Update loop: 0

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 75
Thor hunger: 50
Thor fatigue: 50
Thor social: 75

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 73
Thor hunger: 49
Thor fatigue: 49
Thor social: 72

¤--> Sunday 23:00, Update loop: 1

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 73
Thor hunger: 49
Thor fatigue: 49
Thor social: 72

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 71
Thor hunger: 48
Thor fatigue: 48
Thor social: 69

¤--> Monday 00:00, Update loop: 2

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 71
Thor hunger: 48
Thor fatigue: 48
Thor social: 69

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 69
Thor hunger: 47
Thor fatigue: 47
Thor social: 66

¤--> Monday 01:00, Update loop: 3

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 69
Thor hunger: 47
Thor fatigue: 47
Thor social: 66

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 67
Thor hunger: 46
Thor fatigue: 46
Thor social: 63

¤--> Monday 02:00, Update loop: 4

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 67
Thor hunger: 46
Thor fatigue: 46
Thor social: 63

<update>
<class 'entity_hulk.Hulk'> transition from <class 'entity_hulk.HulkAtHome'> to <class 'entity_hulk.HulkAtHomeSleep'>
At loop 4, Hulk sent message to Hulk with message: MSG.WakeUp. Delay: 5
-------- NEW RUN --------

¤--> Sunday 22:00, Update loop: 0

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 75
Thor hunger: 50
Thor fatigue: 50
Thor social: 75

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 73
Thor hunger: 49
Thor fatigue: 49
Thor social: 72

¤--> Sunday 23:00, Update loop: 1

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 73
Thor hunger: 49
Thor fatigue: 49
Thor social: 72

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 71
Thor hunger: 48
Thor fatigue: 48
Thor social: 69

¤--> Monday 00:00, Update loop: 2

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 71
Thor hunger: 48
Thor fatigue: 48
Thor social: 69

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 69
Thor hunger: 47
Thor fatigue: 47
Thor social: 66

¤--> Monday 01:00, Update loop: 3

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 69
Thor hunger: 47
Thor fatigue: 47
Thor social: 66

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 67
Thor hunger: 46
Thor fatigue: 46
Thor social: 63

¤--> Monday 02:00, Update loop: 4

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 67
Thor hunger: 46
Thor fatigue: 46
Thor social: 63

<update>
<class 'entity_hulk.Hulk'> transition from <class 'entity_hulk.HulkAtHome'> to <class 'entity_hulk.HulkAtHomeSleep'>
At loop 4, Hulk sent message to Hulk with message: MSG.WakeUp. Delay: 5

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 65
Thor hunger: 45
Thor fatigue: 45
Thor social: 60

¤--> Monday 03:00, Update loop: 5

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 65
Thor hunger: 45
Thor fatigue: 45
Thor social: 60

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 63
Thor hunger: 44
Thor fatigue: 44
Thor social: 57

¤--> Monday 04:00, Update loop: 6

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 63
Thor hunger: 44
Thor fatigue: 44
Thor social: 57

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 61
Thor hunger: 43
Thor fatigue: 43
Thor social: 54

¤--> Monday 05:00, Update loop: 7

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 61
Thor hunger: 43
Thor fatigue: 43
Thor social: 54

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 59
Thor hunger: 42
Thor fatigue: 42
Thor social: 51

¤--> Monday 06:00, Update loop: 8

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 59
Thor hunger: 42
Thor fatigue: 42
Thor social: 51

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 57
Thor hunger: 41
Thor fatigue: 41
Thor social: 48

¤--> Monday 07:00, Update loop: 9

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 57
Thor hunger: 41
Thor fatigue: 41
Thor social: 48

<update>
At loop 9, Hulk recieved message from Hulk with message: MSG.WakeUp. Dispatch time: 9
<class 'entity_hulk.Hulk'> reverting from <class 'entity_hulk.HulkAtHomeSleep'> to <class 'entity_hulk.HulkAtHome'>
At loop 9, Hulk sent message to Hulk with message: MSG.GoWork. Delay: 1

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 55
Thor hunger: 40
Thor fatigue: 40
Thor social: 45

¤--> Monday 08:00, Update loop: 10

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 55
Thor hunger: 40
Thor fatigue: 40
Thor social: 45

<update>
At loop 10, Hulk recieved message from Hulk with message: MSG.GoWork. Dispatch time: 10
<class 'entity_hulk.Hulk'> transition from <class 'entity_hulk.HulkAtHome'> to <class 'entity_hulk.HulkTraverse'>
At loop 10, Hulk sent message to Hulk with message: MSG.ArriveWork. Delay: 2
<class 'entity_rocket.Rocket'> transition from <class 'entity_rocket.RocketAtWork'> to <class 'entity_rocket.RocketTraverse'>
At loop 10, Rocket sent message to Rocket with message: MSG.ArriveHome. Delay: 2

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 53
Thor hunger: 39
Thor fatigue: 39
Thor social: 42

¤--> Monday 09:00, Update loop: 11

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 53
Thor hunger: 39
Thor fatigue: 39
Thor social: 42

<update>
At loop 11, Thor sent message to Thor with message: MSG.GoWork. Delay: 0
At loop 11, Thor recieved message from Thor with message: MSG.GoWork. Dispatch time: 0
<class 'entity_thor.Thor'> transition from <class 'entity_thor.ThorAtHome'> to <class 'entity_thor.ThorTraverse'>
At loop 11, Thor sent message to Thor with message: MSG.ArriveWork. Delay: 1

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorTraverse'>
Thor previous state: <class 'entity_thor.ThorAtHome'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 51
Thor hunger: 38
Thor fatigue: 38
Thor social: 39

¤--> Monday 10:00, Update loop: 12

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorTraverse'>
Thor previous state: <class 'entity_thor.ThorAtHome'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 51
Thor hunger: 38
Thor fatigue: 38
Thor social: 39

<update>
At loop 12, Hulk recieved message from Hulk with message: MSG.ArriveWork. Dispatch time: 12
<class 'entity_hulk.Hulk'> transition from <class 'entity_hulk.HulkTraverse'> to <class 'entity_hulk.HulkAtWork'>
At loop 12, Hulk sent message to Hulk with message: MSG.GoHome. Delay: 5
At loop 12, Rocket recieved message from Rocket with message: MSG.ArriveHome. Dispatch time: 12
<class 'entity_rocket.Rocket'> transition from <class 'entity_rocket.RocketTraverse'> to <class 'entity_rocket.RocketAtHome'>
At loop 12, Thor recieved message from Thor with message: MSG.ArriveWork. Dispatch time: 12
<class 'entity_thor.Thor'> transition from <class 'entity_thor.ThorTraverse'> to <class 'entity_thor.ThorAtWork'>
<class 'entity_rocket.Rocket'> transition from <class 'entity_rocket.RocketAtHome'> to <class 'entity_rocket.RocketAtHomeSleep'>
<class 'entity_thor.Thor'> transition from <class 'entity_thor.ThorAtWork'> to <class 'entity_thor.ThorTraverse'>
At loop 12, Thor sent message to Thor with message: MSG.ArriveStore. Delay: 1

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorTraverse'>
Thor previous state: <class 'entity_thor.ThorAtWork'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 49
Thor hunger: 37
Thor fatigue: 37
Thor social: 36

¤--> Monday 11:00, Update loop: 13

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorTraverse'>
Thor previous state: <class 'entity_thor.ThorAtWork'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 49
Thor hunger: 37
Thor fatigue: 37
Thor social: 36

<update>
At loop 13, Thor recieved message from Thor with message: MSG.ArriveStore. Dispatch time: 13
<class 'entity_thor.Thor'> transition from <class 'entity_thor.ThorTraverse'> to <class 'entity_thor.ThorAtStore'>
<class 'entity_thor.Thor'> transition from <class 'entity_thor.ThorAtStore'> to <class 'entity_thor.ThorTraverse'>
At loop 13, Thor sent message to Thor with message: MSG.ArriveWork. Delay: 1

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorTraverse'>
Thor previous state: <class 'entity_thor.ThorAtStore'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', True)])
Thor money: 5
Thor thirst: 47
Thor hunger: 36
Thor fatigue: 36
Thor social: 33

¤--> Monday 12:00, Update loop: 14

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorTraverse'>
Thor previous state: <class 'entity_thor.ThorAtStore'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', True)])
Thor money: 5
Thor thirst: 47
Thor hunger: 36
Thor fatigue: 36
Thor social: 33

<update>
At loop 14, Thor recieved message from Thor with message: MSG.ArriveWork. Dispatch time: 14
<class 'entity_thor.Thor'> transition from <class 'entity_thor.ThorTraverse'> to <class 'entity_thor.ThorAtWork'>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtWork'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 10
Thor thirst: 45
Thor hunger: 35
Thor fatigue: 35
Thor social: 30

¤--> Monday 13:00, Update loop: 15

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtWork'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 10
Thor thirst: 45
Thor hunger: 35
Thor fatigue: 35
Thor social: 30

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtWork'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 13
Thor thirst: 43
Thor hunger: 34
Thor fatigue: 34
Thor social: 27

¤--> Monday 14:00, Update loop: 16

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtWork'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 13
Thor thirst: 43
Thor hunger: 34
Thor fatigue: 34
Thor social: 27

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtWork'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 16
Thor thirst: 41
Thor hunger: 33
Thor fatigue: 33
Thor social: 24

¤--> Monday 15:00, Update loop: 17

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtWork'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 16
Thor thirst: 41
Thor hunger: 33
Thor fatigue: 33
Thor social: 24

<update>
At loop 17, Hulk recieved message from Hulk with message: MSG.GoHome. Dispatch time: 17
<class 'entity_hulk.Hulk'> transition from <class 'entity_hulk.HulkAtWork'> to <class 'entity_hulk.HulkTraverse'>
At loop 17, Hulk sent message to Hulk with message: MSG.ArriveHome. Delay: 2
<class 'entity_thor.Thor'> transition from <class 'entity_thor.ThorAtWork'> to <class 'entity_thor.ThorTraverse'>
At loop 17, Thor sent message to Thor with message: MSG.ArriveHome. Delay: 1

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorTraverse'>
Thor previous state: <class 'entity_thor.ThorAtWork'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 16
Thor thirst: 39
Thor hunger: 32
Thor fatigue: 32
Thor social: 21

¤--> Monday 16:00, Update loop: 18

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorTraverse'>
Thor previous state: <class 'entity_thor.ThorAtWork'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 16
Thor thirst: 39
Thor hunger: 32
Thor fatigue: 32
Thor social: 21

<update>
At loop 18, Thor recieved message from Thor with message: MSG.ArriveHome. Dispatch time: 18
<class 'entity_thor.Thor'> transition from <class 'entity_thor.ThorTraverse'> to <class 'entity_thor.ThorAtHome'>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 16
Thor thirst: 37
Thor hunger: 31
Thor fatigue: 31
Thor social: 18

¤--> Monday 17:00, Update loop: 19

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 16
Thor thirst: 37
Thor hunger: 31
Thor fatigue: 31
Thor social: 18

<update>
At loop 19, Hulk recieved message from Hulk with message: MSG.ArriveHome. Dispatch time: 19
<class 'entity_hulk.Hulk'> transition from <class 'entity_hulk.HulkTraverse'> to <class 'entity_hulk.HulkAtHome'>
<class 'entity_hulk.Hulk'> transition from <class 'entity_hulk.HulkAtHome'> to <class 'entity_hulk.HulkAtHomeDinner'>
<class 'entity_hulk.Hulk'> reverting from <class 'entity_hulk.HulkAtHomeDinner'> to <class 'entity_hulk.HulkAtHome'>
At loop 19, Hulk sent message to Hulk with message: MSG.GoStore. Delay: 0
At loop 19, Hulk recieved message from Hulk with message: MSG.GoStore. Dispatch time: 0
<class 'entity_hulk.Hulk'> transition from <class 'entity_hulk.HulkAtHome'> to <class 'entity_hulk.HulkTraverse'>
At loop 19, Hulk sent message to Hulk with message: MSG.ArriveStore. Delay: 2

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 16
Thor thirst: 35
Thor hunger: 30
Thor fatigue: 30
Thor social: 15

¤--> Monday 18:00, Update loop: 20

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 16
Thor thirst: 35
Thor hunger: 30
Thor fatigue: 30
Thor social: 15

<update>
At loop 20, Rocket sent message to Rocket with message: MSG.WakeUp. Delay: 0
<class 'entity_rocket.Rocket'> reverting from <class 'entity_rocket.RocketAtHomeSleep'> to <class 'entity_rocket.RocketAtHome'>
<class 'entity_rocket.Rocket'> transition from <class 'entity_rocket.RocketAtHome'> to <class 'entity_rocket.RocketTraverse'>
At loop 20, Rocket sent message to Rocket with message: MSG.ArriveWork. Delay: 2

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 16
Thor thirst: 33
Thor hunger: 29
Thor fatigue: 29
Thor social: 12

¤--> Monday 19:00, Update loop: 21

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 16
Thor thirst: 33
Thor hunger: 29
Thor fatigue: 29
Thor social: 12

<update>
At loop 21, Hulk recieved message from Hulk with message: MSG.ArriveStore. Dispatch time: 21
<class 'entity_hulk.Hulk'> transition from <class 'entity_hulk.HulkTraverse'> to <class 'entity_hulk.HulkAtStore'>
<class 'entity_hulk.Hulk'> transition from <class 'entity_hulk.HulkAtStore'> to <class 'entity_hulk.HulkTraverse'>
At loop 21, Hulk sent message to Hulk with message: MSG.ArriveHome. Delay: 2

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 16
Thor thirst: 31
Thor hunger: 28
Thor fatigue: 28
Thor social: 9

¤--> Monday 20:00, Update loop: 22

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 16
Thor thirst: 31
Thor hunger: 28
Thor fatigue: 28
Thor social: 9

<update>
At loop 22, Rocket recieved message from Rocket with message: MSG.ArriveWork. Dispatch time: 22
<class 'entity_rocket.Rocket'> transition from <class 'entity_rocket.RocketTraverse'> to <class 'entity_rocket.RocketAtWork'>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 16
Thor thirst: 29
Thor hunger: 27
Thor fatigue: 27
Thor social: 6

¤--> Monday 21:00, Update loop: 23

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 16
Thor thirst: 29
Thor hunger: 27
Thor fatigue: 27
Thor social: 6

<update>
At loop 23, Hulk recieved message from Hulk with message: MSG.ArriveHome. Dispatch time: 23
<class 'entity_hulk.Hulk'> transition from <class 'entity_hulk.HulkTraverse'> to <class 'entity_hulk.HulkAtHome'>
<class 'entity_hulk.Hulk'> transition from <class 'entity_hulk.HulkAtHome'> to <class 'entity_hulk.HulkAtHomeDinner'>
<class 'entity_hulk.Hulk'> reverting from <class 'entity_hulk.HulkAtHomeDinner'> to <class 'entity_hulk.HulkAtHome'>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 16
Thor thirst: 27
Thor hunger: 26
Thor fatigue: 26
Thor social: 3

¤--> Monday 22:00, Update loop: 24

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 16
Thor thirst: 27
Thor hunger: 26
Thor fatigue: 26
Thor social: 3

<update>
<class 'entity_hulk.Hulk'> transition from <class 'entity_hulk.HulkAtHome'> to <class 'entity_hulk.HulkAtHomeSleep'>
At loop 24, Hulk sent message to Hulk with message: MSG.WakeUp. Delay: 9
<class 'entity_thor.Thor'> transition from <class 'entity_thor.ThorAtHome'> to <class 'entity_thor.ThorSleep'>
At loop 24, Thor sent message to Thor with message: MSG.WakeUp. Delay: 1

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorSleep'>
Thor previous state: <class 'entity_thor.ThorAtHome'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 16
Thor thirst: 25
Thor hunger: 25
Thor fatigue: 25
Thor social: 0

¤--> Monday 23:00, Update loop: 25

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorSleep'>
Thor previous state: <class 'entity_thor.ThorAtHome'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 16
Thor thirst: 25
Thor hunger: 25
Thor fatigue: 25
Thor social: 0

<update>
At loop 25, Thor recieved message from Thor with message: MSG.WakeUp. Dispatch time: 25
<class 'entity_thor.Thor'> reverting from <class 'entity_thor.ThorSleep'> to <class 'entity_thor.ThorAtHome'>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorAtHome'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 16
Thor thirst: 23
Thor hunger: 24
Thor fatigue: 59
Thor social: -3

¤--> Tuesday 00:00, Update loop: 26

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorAtHome'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 16
Thor thirst: 23
Thor hunger: 24
Thor fatigue: 59
Thor social: -3

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorAtHome'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 16
Thor thirst: 21
Thor hunger: 23
Thor fatigue: 58
Thor social: -6

¤--> Tuesday 01:00, Update loop: 27

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorAtHome'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 16
Thor thirst: 21
Thor hunger: 23
Thor fatigue: 58
Thor social: -6

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorAtHome'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 16
Thor thirst: 19
Thor hunger: 22
Thor fatigue: 57
Thor social: -9

¤--> Tuesday 02:00, Update loop: 28

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorAtHome'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 16
Thor thirst: 19
Thor hunger: 22
Thor fatigue: 57
Thor social: -9

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorAtHome'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 16
Thor thirst: 17
Thor hunger: 21
Thor fatigue: 56
Thor social: -12

¤--> Tuesday 03:00, Update loop: 29

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorAtHome'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 16
Thor thirst: 17
Thor hunger: 21
Thor fatigue: 56
Thor social: -12

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorAtHome'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 16
Thor thirst: 15
Thor hunger: 20
Thor fatigue: 55
Thor social: -15

¤--> Tuesday 04:00, Update loop: 30

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorAtHome'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 16
Thor thirst: 15
Thor hunger: 20
Thor fatigue: 55
Thor social: -15

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorAtHome'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 16
Thor thirst: 13
Thor hunger: 19
Thor fatigue: 54
Thor social: -18

¤--> Tuesday 05:00, Update loop: 31

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorAtHome'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 16
Thor thirst: 13
Thor hunger: 19
Thor fatigue: 54
Thor social: -18

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorAtHome'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 16
Thor thirst: 11
Thor hunger: 18
Thor fatigue: 53
Thor social: -21

¤--> Tuesday 06:00, Update loop: 32

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorAtHome'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 16
Thor thirst: 11
Thor hunger: 18
Thor fatigue: 53
Thor social: -21

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorAtHome'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 16
Thor thirst: 9
Thor hunger: 17
Thor fatigue: 52
Thor social: -24

¤--> Tuesday 07:00, Update loop: 33

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorAtHome'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 16
Thor thirst: 9
Thor hunger: 17
Thor fatigue: 52
Thor social: -24

<update>
At loop 33, Hulk recieved message from Hulk with message: MSG.WakeUp. Dispatch time: 33
<class 'entity_hulk.Hulk'> reverting from <class 'entity_hulk.HulkAtHomeSleep'> to <class 'entity_hulk.HulkAtHome'>
At loop 33, Hulk sent message to Hulk with message: MSG.GoWork. Delay: 1

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorAtHome'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 16
Thor thirst: 7
Thor hunger: 16
Thor fatigue: 51
Thor social: -27

¤--> Tuesday 08:00, Update loop: 34

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorAtHome'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 16
Thor thirst: 7
Thor hunger: 16
Thor fatigue: 51
Thor social: -27

<update>
At loop 34, Hulk recieved message from Hulk with message: MSG.GoWork. Dispatch time: 34
<class 'entity_hulk.Hulk'> transition from <class 'entity_hulk.HulkAtHome'> to <class 'entity_hulk.HulkTraverse'>
At loop 34, Hulk sent message to Hulk with message: MSG.ArriveWork. Delay: 2
<class 'entity_rocket.Rocket'> transition from <class 'entity_rocket.RocketAtWork'> to <class 'entity_rocket.RocketTraverse'>
At loop 34, Rocket sent message to Rocket with message: MSG.ArriveHome. Delay: 2

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorAtHome'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 16
Thor thirst: 5
Thor hunger: 15
Thor fatigue: 50
Thor social: -30

¤--> Tuesday 09:00, Update loop: 35

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorAtHome'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 16
Thor thirst: 5
Thor hunger: 15
Thor fatigue: 50
Thor social: -30

<update>
At loop 35, Thor sent message to Thor with message: MSG.GoWork. Delay: 0
At loop 35, Thor recieved message from Thor with message: MSG.GoWork. Dispatch time: 0
<class 'entity_thor.Thor'> transition from <class 'entity_thor.ThorAtHome'> to <class 'entity_thor.ThorTraverse'>
At loop 35, Thor sent message to Thor with message: MSG.ArriveWork. Delay: 1

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorTraverse'>
Thor previous state: <class 'entity_thor.ThorAtHome'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 16
Thor thirst: 3
Thor hunger: 14
Thor fatigue: 49
Thor social: -33

¤--> Tuesday 10:00, Update loop: 36

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorTraverse'>
Thor previous state: <class 'entity_thor.ThorAtHome'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 16
Thor thirst: 3
Thor hunger: 14
Thor fatigue: 49
Thor social: -33

<update>
At loop 36, Hulk recieved message from Hulk with message: MSG.ArriveWork. Dispatch time: 36
<class 'entity_hulk.Hulk'> transition from <class 'entity_hulk.HulkTraverse'> to <class 'entity_hulk.HulkAtWork'>
At loop 36, Hulk sent message to Hulk with message: MSG.GoHome. Delay: 5
At loop 36, Rocket recieved message from Rocket with message: MSG.ArriveHome. Dispatch time: 36
<class 'entity_rocket.Rocket'> transition from <class 'entity_rocket.RocketTraverse'> to <class 'entity_rocket.RocketAtHome'>
At loop 36, Thor recieved message from Thor with message: MSG.ArriveWork. Dispatch time: 36
<class 'entity_thor.Thor'> transition from <class 'entity_thor.ThorTraverse'> to <class 'entity_thor.ThorAtWork'>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtWork'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 19
Thor thirst: 1
Thor hunger: 13
Thor fatigue: 48
Thor social: -36

¤--> Tuesday 11:00, Update loop: 37

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtWork'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 19
Thor thirst: 1
Thor hunger: 13
Thor fatigue: 48
Thor social: -36

<update>
At loop 37, Rocket sent message to Rocket with message: MSG.PizzaDelivery. Delay: 2

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtWork'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 22
Thor thirst: -1
Thor hunger: 12
Thor fatigue: 47
Thor social: -39

¤--> Tuesday 12:00, Update loop: 38

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtWork'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 22
Thor thirst: -1
Thor hunger: 12
Thor fatigue: 47
Thor social: -39

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtWork'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 25
Thor thirst: -3
Thor hunger: 11
Thor fatigue: 46
Thor social: -42

¤--> Tuesday 13:00, Update loop: 39

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtWork'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 25
Thor thirst: -3
Thor hunger: 11
Thor fatigue: 46
Thor social: -42

<update>
At loop 39, Rocket recieved message from Rocket with message: MSG.PizzaDelivery. Dispatch time: 39

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtWork'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 28
Thor thirst: -5
Thor hunger: 10
Thor fatigue: 45
Thor social: -45

¤--> Tuesday 14:00, Update loop: 40

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtWork'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 28
Thor thirst: -5
Thor hunger: 10
Thor fatigue: 45
Thor social: -45

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtWork'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 31
Thor thirst: -7
Thor hunger: 9
Thor fatigue: 44
Thor social: -48

¤--> Tuesday 15:00, Update loop: 41

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtWork'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 31
Thor thirst: -7
Thor hunger: 9
Thor fatigue: 44
Thor social: -48

<update>
At loop 41, Hulk recieved message from Hulk with message: MSG.GoHome. Dispatch time: 41
<class 'entity_hulk.Hulk'> transition from <class 'entity_hulk.HulkAtWork'> to <class 'entity_hulk.HulkTraverse'>
At loop 41, Hulk sent message to Hulk with message: MSG.ArriveHome. Delay: 2
<class 'entity_thor.Thor'> transition from <class 'entity_thor.ThorAtWork'> to <class 'entity_thor.ThorTraverse'>
At loop 41, Thor sent message to Thor with message: MSG.ArriveHome. Delay: 1

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorTraverse'>
Thor previous state: <class 'entity_thor.ThorAtWork'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 31
Thor thirst: -9
Thor hunger: 8
Thor fatigue: 43
Thor social: -51

¤--> Tuesday 16:00, Update loop: 42

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorTraverse'>
Thor previous state: <class 'entity_thor.ThorAtWork'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 31
Thor thirst: -9
Thor hunger: 8
Thor fatigue: 43
Thor social: -51

<update>
At loop 42, Thor recieved message from Thor with message: MSG.ArriveHome. Dispatch time: 42
<class 'entity_thor.Thor'> transition from <class 'entity_thor.ThorTraverse'> to <class 'entity_thor.ThorAtHome'>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 31
Thor thirst: -11
Thor hunger: 7
Thor fatigue: 42
Thor social: -54

¤--> Tuesday 17:00, Update loop: 43

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 31
Thor thirst: -11
Thor hunger: 7
Thor fatigue: 42
Thor social: -54

<update>
At loop 43, Hulk recieved message from Hulk with message: MSG.ArriveHome. Dispatch time: 43
<class 'entity_hulk.Hulk'> transition from <class 'entity_hulk.HulkTraverse'> to <class 'entity_hulk.HulkAtHome'>
At loop 43, Hulk sent message to Rocket with message: MSG.D_HulkAskRocketIfWorking_1. Delay: 0
At loop 43, Rocket recieved message from Hulk with message: MSG.D_HulkAskRocketIfWorking_1. Dispatch time: 0
At loop 43, Rocket sent message to Hulk with message: MSG.D_HulkAskRocketIfWorking_3. Delay: 0
At loop 43, Hulk recieved message from Rocket with message: MSG.D_HulkAskRocketIfWorking_3. Dispatch time: 0
At loop 43, Hulk sent message to Hulk with message: MSG.GoPub. Delay: 1

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 31
Thor thirst: -13
Thor hunger: 6
Thor fatigue: 41
Thor social: -57

¤--> Tuesday 18:00, Update loop: 44

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 31
Thor thirst: -13
Thor hunger: 6
Thor fatigue: 41
Thor social: -57

<update>
At loop 44, Hulk recieved message from Hulk with message: MSG.GoPub. Dispatch time: 44
<class 'entity_hulk.Hulk'> transition from <class 'entity_hulk.HulkAtHome'> to <class 'entity_hulk.HulkTraverse'>
At loop 44, Hulk sent message to Hulk with message: MSG.ArrivePub. Delay: 2
<class 'entity_rocket.Rocket'> transition from <class 'entity_rocket.RocketAtHome'> to <class 'entity_rocket.RocketTraverse'>
At loop 44, Rocket sent message to Rocket with message: MSG.ArriveWork. Delay: 2

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 31
Thor thirst: -15
Thor hunger: 5
Thor fatigue: 40
Thor social: -60

¤--> Tuesday 19:00, Update loop: 45

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 31
Thor thirst: -15
Thor hunger: 5
Thor fatigue: 40
Thor social: -60

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 31
Thor thirst: -17
Thor hunger: 4
Thor fatigue: 39
Thor social: -63

¤--> Tuesday 20:00, Update loop: 46

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 31
Thor thirst: -17
Thor hunger: 4
Thor fatigue: 39
Thor social: -63

<update>
At loop 46, Rocket recieved message from Rocket with message: MSG.ArriveWork. Dispatch time: 46
<class 'entity_rocket.Rocket'> transition from <class 'entity_rocket.RocketTraverse'> to <class 'entity_rocket.RocketAtWork'>
At loop 46, Hulk recieved message from Hulk with message: MSG.ArrivePub. Dispatch time: 46
<class 'entity_hulk.Hulk'> transition from <class 'entity_hulk.HulkTraverse'> to <class 'entity_hulk.HulkAtPub'>
At loop 46, Hulk sent message to Rocket with message: MSG.HulkArrivePub. Delay: 0
At loop 46, Rocket recieved message from Hulk with message: MSG.HulkArrivePub. Dispatch time: 0
<class 'entity_rocket.Rocket'> transition from <class 'entity_rocket.RocketAtWork'> to <class 'entity_rocket.RocketAtWorkChillax'>
At loop 46, Rocket sent message to Rocket with message: MSG.D_HulkRocketPub_2. Delay: 2
At loop 46, Rocket sent message to Hulk with message: MSG.D_HulkRocketPub_1. Delay: 0
At loop 46, Hulk recieved message from Rocket with message: MSG.D_HulkRocketPub_1. Dispatch time: 0
<class 'entity_hulk.Hulk'> transition from <class 'entity_hulk.HulkAtPub'> to <class 'entity_hulk.HulkAtPubChillax'>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 31
Thor thirst: -19
Thor hunger: 3
Thor fatigue: 38
Thor social: -66

¤--> Tuesday 21:00, Update loop: 47

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 31
Thor thirst: -19
Thor hunger: 3
Thor fatigue: 38
Thor social: -66

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 31
Thor thirst: -21
Thor hunger: 2
Thor fatigue: 37
Thor social: -69

¤--> Tuesday 22:00, Update loop: 48

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 31
Thor thirst: -21
Thor hunger: 2
Thor fatigue: 37
Thor social: -69

<update>
At loop 48, Rocket recieved message from Rocket with message: MSG.D_HulkRocketPub_2. Dispatch time: 48
At loop 48, Rocket sent message to Hulk with message: MSG.D_HulkRocketPub_3. Delay: 0
At loop 48, Hulk recieved message from Rocket with message: MSG.D_HulkRocketPub_3. Dispatch time: 0
At loop 48, Rocket sent message to Rocket with message: MSG.D_HulkRocketPub_4. Delay: 2

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 31
Thor thirst: -23
Thor hunger: 1
Thor fatigue: 36
Thor social: -72

¤--> Tuesday 23:00, Update loop: 49

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 31
Thor thirst: -23
Thor hunger: 1
Thor fatigue: 36
Thor social: -72

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 31
Thor thirst: -25
Thor hunger: 0
Thor fatigue: 35
Thor social: -75

¤--> Wednesday 00:00, Update loop: 50

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 31
Thor thirst: -25
Thor hunger: 0
Thor fatigue: 35
Thor social: -75

<update>
At loop 50, Rocket recieved message from Rocket with message: MSG.D_HulkRocketPub_4. Dispatch time: 50
At loop 50, Rocket sent message to Hulk with message: MSG.D_HulkRocketPub_5. Delay: 0
At loop 50, Hulk recieved message from Rocket with message: MSG.D_HulkRocketPub_5. Dispatch time: 0

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 31
Thor thirst: -27
Thor hunger: -1
Thor fatigue: 34
Thor social: -78

¤--> Wednesday 01:00, Update loop: 51

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 31
Thor thirst: -27
Thor hunger: -1
Thor fatigue: 34
Thor social: -78

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 31
Thor thirst: -29
Thor hunger: -2
Thor fatigue: 33
Thor social: -81

¤--> Wednesday 02:00, Update loop: 52

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 31
Thor thirst: -29
Thor hunger: -2
Thor fatigue: 33
Thor social: -81

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 31
Thor thirst: -31
Thor hunger: -3
Thor fatigue: 32
Thor social: -84

¤--> Wednesday 03:00, Update loop: 53

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 31
Thor thirst: -31
Thor hunger: -3
Thor fatigue: 32
Thor social: -84

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 31
Thor thirst: -33
Thor hunger: -4
Thor fatigue: 31
Thor social: -87

¤--> Wednesday 04:00, Update loop: 54

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 31
Thor thirst: -33
Thor hunger: -4
Thor fatigue: 31
Thor social: -87

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 31
Thor thirst: -35
Thor hunger: -5
Thor fatigue: 30
Thor social: -90

¤--> Wednesday 05:00, Update loop: 55

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 31
Thor thirst: -35
Thor hunger: -5
Thor fatigue: 30
Thor social: -90

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 31
Thor thirst: -37
Thor hunger: -6
Thor fatigue: 29
Thor social: -93

¤--> Wednesday 06:00, Update loop: 56

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 31
Thor thirst: -37
Thor hunger: -6
Thor fatigue: 29
Thor social: -93

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 31
Thor thirst: -39
Thor hunger: -7
Thor fatigue: 28
Thor social: -96

¤--> Wednesday 07:00, Update loop: 57

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 31
Thor thirst: -39
Thor hunger: -7
Thor fatigue: 28
Thor social: -96

<update>
At loop 57, Hulk sent message to Rocket with message: MSG.D_HulkRocketPub_6. Delay: 0
At loop 57, Rocket recieved message from Hulk with message: MSG.D_HulkRocketPub_6. Dispatch time: 0
<class 'entity_rocket.Rocket'> reverting from <class 'entity_rocket.RocketAtWorkChillax'> to <class 'entity_rocket.RocketAtWork'>
<class 'entity_hulk.Hulk'> reverting from <class 'entity_hulk.HulkAtPubChillax'> to <class 'entity_hulk.HulkAtPub'>
<class 'entity_hulk.Hulk'> transition from <class 'entity_hulk.HulkAtPub'> to <class 'entity_hulk.HulkTraverse'>
At loop 57, Hulk sent message to Hulk with message: MSG.ArriveWork. Delay: 2

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 31
Thor thirst: -41
Thor hunger: -8
Thor fatigue: 27
Thor social: -99

¤--> Wednesday 08:00, Update loop: 58

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 31
Thor thirst: -41
Thor hunger: -8
Thor fatigue: 27
Thor social: -99

<update>
<class 'entity_rocket.Rocket'> transition from <class 'entity_rocket.RocketAtWork'> to <class 'entity_rocket.RocketTraverse'>
At loop 58, Rocket sent message to Rocket with message: MSG.ArriveHome. Delay: 2

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 31
Thor thirst: -43
Thor hunger: -9
Thor fatigue: 26
Thor social: -102

¤--> Wednesday 09:00, Update loop: 59

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 31
Thor thirst: -43
Thor hunger: -9
Thor fatigue: 26
Thor social: -102

<update>
At loop 59, Hulk recieved message from Hulk with message: MSG.ArriveWork. Dispatch time: 59
<class 'entity_hulk.Hulk'> transition from <class 'entity_hulk.HulkTraverse'> to <class 'entity_hulk.HulkAtWork'>
At loop 59, Hulk sent message to Hulk with message: MSG.GoHome. Delay: 4
At loop 59, Thor sent message to Thor with message: MSG.GoWork. Delay: 0
At loop 59, Thor recieved message from Thor with message: MSG.GoWork. Dispatch time: 0
<class 'entity_thor.Thor'> transition from <class 'entity_thor.ThorAtHome'> to <class 'entity_thor.ThorTraverse'>
At loop 59, Thor sent message to Thor with message: MSG.ArriveWork. Delay: 1
<class 'entity_thor.Thor'> transition from <class 'entity_thor.ThorTraverse'> to <class 'entity_thor.ThorSleep'>
At loop 59, Thor sent message to Thor with message: MSG.WakeUp. Delay: 1

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorSleep'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 31
Thor thirst: -45
Thor hunger: -10
Thor fatigue: 25
Thor social: -105

¤--> Wednesday 10:00, Update loop: 60

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorSleep'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 31
Thor thirst: -45
Thor hunger: -10
Thor fatigue: 25
Thor social: -105

<update>
At loop 60, Rocket recieved message from Rocket with message: MSG.ArriveHome. Dispatch time: 60
<class 'entity_rocket.Rocket'> transition from <class 'entity_rocket.RocketTraverse'> to <class 'entity_rocket.RocketAtHome'>
At loop 60, Thor recieved message from Thor with message: MSG.WakeUp. Dispatch time: 60
<class 'entity_thor.Thor'> reverting from <class 'entity_thor.ThorSleep'> to <class 'entity_thor.ThorTraverse'>
<class 'entity_rocket.Rocket'> transition from <class 'entity_rocket.RocketAtHome'> to <class 'entity_rocket.RocketAtHomeSleep'>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorTraverse'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 31
Thor thirst: -47
Thor hunger: -11
Thor fatigue: 59
Thor social: -108

¤--> Wednesday 11:00, Update loop: 61

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorTraverse'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 31
Thor thirst: -47
Thor hunger: -11
Thor fatigue: 59
Thor social: -108

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorTraverse'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 31
Thor thirst: -49
Thor hunger: -12
Thor fatigue: 58
Thor social: -111

¤--> Wednesday 12:00, Update loop: 62

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorTraverse'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 31
Thor thirst: -49
Thor hunger: -12
Thor fatigue: 58
Thor social: -111

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorTraverse'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 31
Thor thirst: -51
Thor hunger: -13
Thor fatigue: 57
Thor social: -114

¤--> Wednesday 13:00, Update loop: 63

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorTraverse'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', False)])
Thor money: 31
Thor thirst: -51
Thor hunger: -13
Thor fatigue: 57
Thor social: -114

<update>
At loop 63, Hulk recieved message from Hulk with message: MSG.GoHome. Dispatch time: 63
<class 'entity_hulk.Hulk'> transition from <class 'entity_hulk.HulkAtWork'> to <class 'entity_hulk.HulkTraverse'>
At loop 63, Hulk sent message to Hulk with message: MSG.ArriveHome. Delay: 2
