-------- NEW RUN --------

¤--> Sunday 22:00, Update loop: 0

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 75
Thor hunger: 50
Thor fatigue: 50
Thor social: 75

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 73
Thor hunger: 49
Thor fatigue: 49
Thor social: 72

¤--> Sunday 23:00, Update loop: 1

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 73
Thor hunger: 49
Thor fatigue: 49
Thor social: 72

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 71
Thor hunger: 48
Thor fatigue: 48
Thor social: 69

¤--> Monday 00:00, Update loop: 2

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 71
Thor hunger: 48
Thor fatigue: 48
Thor social: 69

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 69
Thor hunger: 47
Thor fatigue: 47
Thor social: 66

¤--> Monday 01:00, Update loop: 3

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 69
Thor hunger: 47
Thor fatigue: 47
Thor social: 66

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 67
Thor hunger: 46
Thor fatigue: 46
Thor social: 63

¤--> Monday 02:00, Update loop: 4

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 67
Thor hunger: 46
Thor fatigue: 46
Thor social: 63

<update>
<class 'entity_hulk.Hulk'> transition from <class 'entity_hulk.HulkAtHome'> to <class 'entity_hulk.HulkAtHomeSleep'>
At loop 4, Hulk sent message to Hulk with message: MSG.WakeUp. Delay: 5

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 65
Thor hunger: 45
Thor fatigue: 45
Thor social: 60

¤--> Monday 03:00, Update loop: 5

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 65
Thor hunger: 45
Thor fatigue: 45
Thor social: 60

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 63
Thor hunger: 44
Thor fatigue: 44
Thor social: 57

¤--> Monday 04:00, Update loop: 6

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 63
Thor hunger: 44
Thor fatigue: 44
Thor social: 57

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 61
Thor hunger: 43
Thor fatigue: 43
Thor social: 54

¤--> Monday 05:00, Update loop: 7

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 61
Thor hunger: 43
Thor fatigue: 43
Thor social: 54

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 59
Thor hunger: 42
Thor fatigue: 42
Thor social: 51

¤--> Monday 06:00, Update loop: 8

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 59
Thor hunger: 42
Thor fatigue: 42
Thor social: 51

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 57
Thor hunger: 41
Thor fatigue: 41
Thor social: 48

¤--> Monday 07:00, Update loop: 9

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 57
Thor hunger: 41
Thor fatigue: 41
Thor social: 48

<update>
At loop 9, Hulk recieved message from Hulk with message: MSG.WakeUp. Dispatch time: 9
<class 'entity_hulk.Hulk'> reverting from <class 'entity_hulk.HulkAtHomeSleep'> to <class 'entity_hulk.HulkAtHome'>
At loop 9, Hulk sent message to Hulk with message: MSG.GoWork. Delay: 1

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 55
Thor hunger: 40
Thor fatigue: 40
Thor social: 45

¤--> Monday 08:00, Update loop: 10

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 55
Thor hunger: 40
Thor fatigue: 40
Thor social: 45

<update>
At loop 10, Hulk recieved message from Hulk with message: MSG.GoWork. Dispatch time: 10
<class 'entity_hulk.Hulk'> transition from <class 'entity_hulk.HulkAtHome'> to <class 'entity_hulk.HulkTraverse'>
At loop 10, Hulk sent message to Hulk with message: MSG.ArriveWork. Delay: 2
<class 'entity_rocket.Rocket'> transition from <class 'entity_rocket.RocketAtWork'> to <class 'entity_rocket.RocketTraverse'>
At loop 10, Rocket sent message to Rocket with message: MSG.ArriveHome. Delay: 2

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 53
Thor hunger: 39
Thor fatigue: 39
Thor social: 42

¤--> Monday 09:00, Update loop: 11

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'NoneType'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 53
Thor hunger: 39
Thor fatigue: 39
Thor social: 42

<update>
At loop 11, Thor sent message to Thor with message: MSG.GoWork. Delay: 0
At loop 11, Thor recieved message from Thor with message: MSG.GoWork. Dispatch time: 0
<class 'entity_thor.Thor'> transition from <class 'entity_thor.ThorAtHome'> to <class 'entity_thor.ThorTraverse'>
At loop 11, Thor sent message to Thor with message: MSG.ArriveWork. Delay: 1

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorTraverse'>
Thor previous state: <class 'entity_thor.ThorAtHome'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 51
Thor hunger: 38
Thor fatigue: 38
Thor social: 39

¤--> Monday 10:00, Update loop: 12

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorTraverse'>
Thor previous state: <class 'entity_thor.ThorAtHome'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 51
Thor hunger: 38
Thor fatigue: 38
Thor social: 39

<update>
At loop 12, Hulk recieved message from Hulk with message: MSG.ArriveWork. Dispatch time: 12
<class 'entity_hulk.Hulk'> transition from <class 'entity_hulk.HulkTraverse'> to <class 'entity_hulk.HulkAtWork'>
At loop 12, Hulk sent message to Hulk with message: MSG.GoHome. Delay: 4
At loop 12, Rocket recieved message from Rocket with message: MSG.ArriveHome. Dispatch time: 12
<class 'entity_rocket.Rocket'> transition from <class 'entity_rocket.RocketTraverse'> to <class 'entity_rocket.RocketAtHome'>
At loop 12, Thor recieved message from Thor with message: MSG.ArriveWork. Dispatch time: 12
<class 'entity_thor.Thor'> transition from <class 'entity_thor.ThorTraverse'> to <class 'entity_thor.ThorAtWork'>
<class 'entity_rocket.Rocket'> transition from <class 'entity_rocket.RocketAtHome'> to <class 'entity_rocket.RocketAtHomeSleep'>
<class 'entity_thor.Thor'> transition from <class 'entity_thor.ThorAtWork'> to <class 'entity_thor.ThorTraverse'>
At loop 12, Thor sent message to Thor with message: MSG.ArriveStore. Delay: 1

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorTraverse'>
Thor previous state: <class 'entity_thor.ThorAtWork'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 49
Thor hunger: 37
Thor fatigue: 37
Thor social: 36

¤--> Monday 11:00, Update loop: 13

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorTraverse'>
Thor previous state: <class 'entity_thor.ThorAtWork'>
Thor location: Town sqaure
Thor inventory: dict_items([])
Thor money: 50
Thor thirst: 49
Thor hunger: 37
Thor fatigue: 37
Thor social: 36

<update>
At loop 13, Thor recieved message from Thor with message: MSG.ArriveStore. Dispatch time: 13
<class 'entity_thor.Thor'> transition from <class 'entity_thor.ThorTraverse'> to <class 'entity_thor.ThorAtStore'>
<class 'entity_thor.Thor'> transition from <class 'entity_thor.ThorAtStore'> to <class 'entity_thor.ThorTraverse'>
At loop 13, Thor sent message to Thor with message: MSG.ArriveWork. Delay: 1

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorTraverse'>
Thor previous state: <class 'entity_thor.ThorAtStore'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', True)])
Thor money: 5
Thor thirst: 47
Thor hunger: 36
Thor fatigue: 36
Thor social: 33

¤--> Monday 12:00, Update loop: 14

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorTraverse'>
Thor previous state: <class 'entity_thor.ThorAtStore'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', True)])
Thor money: 5
Thor thirst: 47
Thor hunger: 36
Thor fatigue: 36
Thor social: 33

<update>
At loop 14, Thor recieved message from Thor with message: MSG.ArriveWork. Dispatch time: 14
<class 'entity_thor.Thor'> transition from <class 'entity_thor.ThorTraverse'> to <class 'entity_thor.ThorAtWork'>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtWork'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', True)])
Thor money: 10
Thor thirst: 45
Thor hunger: 35
Thor fatigue: 35
Thor social: 30

¤--> Monday 13:00, Update loop: 15

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtWork'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', True)])
Thor money: 10
Thor thirst: 45
Thor hunger: 35
Thor fatigue: 35
Thor social: 30

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtWork'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', True)])
Thor money: 15
Thor thirst: 43
Thor hunger: 34
Thor fatigue: 34
Thor social: 27

¤--> Monday 14:00, Update loop: 16

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtWork'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', True)])
Thor money: 15
Thor thirst: 43
Thor hunger: 34
Thor fatigue: 34
Thor social: 27

<update>
At loop 16, Hulk recieved message from Hulk with message: MSG.GoHome. Dispatch time: 16
<class 'entity_hulk.Hulk'> transition from <class 'entity_hulk.HulkAtWork'> to <class 'entity_hulk.HulkTraverse'>
At loop 16, Hulk sent message to Hulk with message: MSG.ArriveHome. Delay: 2

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtWork'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', True)])
Thor money: 20
Thor thirst: 41
Thor hunger: 33
Thor fatigue: 33
Thor social: 24

¤--> Monday 15:00, Update loop: 17

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtWork'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', True)])
Thor money: 20
Thor thirst: 41
Thor hunger: 33
Thor fatigue: 33
Thor social: 24

<update>
<class 'entity_thor.Thor'> transition from <class 'entity_thor.ThorAtWork'> to <class 'entity_thor.ThorTraverse'>
At loop 17, Thor sent message to Thor with message: MSG.ArriveHome. Delay: 1

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorTraverse'>
Thor previous state: <class 'entity_thor.ThorAtWork'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', True)])
Thor money: 20
Thor thirst: 39
Thor hunger: 32
Thor fatigue: 32
Thor social: 21

¤--> Monday 16:00, Update loop: 18

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorTraverse'>
Thor previous state: <class 'entity_thor.ThorAtWork'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', True)])
Thor money: 20
Thor thirst: 39
Thor hunger: 32
Thor fatigue: 32
Thor social: 21

<update>
At loop 18, Hulk recieved message from Hulk with message: MSG.ArriveHome. Dispatch time: 18
<class 'entity_hulk.Hulk'> transition from <class 'entity_hulk.HulkTraverse'> to <class 'entity_hulk.HulkAtHome'>
At loop 18, Thor recieved message from Thor with message: MSG.ArriveHome. Dispatch time: 18
<class 'entity_thor.Thor'> transition from <class 'entity_thor.ThorTraverse'> to <class 'entity_thor.ThorAtHome'>
<class 'entity_hulk.Hulk'> transition from <class 'entity_hulk.HulkAtHome'> to <class 'entity_hulk.HulkAtHomeDinner'>
<class 'entity_hulk.Hulk'> reverting from <class 'entity_hulk.HulkAtHomeDinner'> to <class 'entity_hulk.HulkAtHome'>
At loop 18, Hulk sent message to Hulk with message: MSG.GoStore. Delay: 0
At loop 18, Hulk recieved message from Hulk with message: MSG.GoStore. Dispatch time: 0
<class 'entity_hulk.Hulk'> transition from <class 'entity_hulk.HulkAtHome'> to <class 'entity_hulk.HulkTraverse'>
At loop 18, Hulk sent message to Hulk with message: MSG.ArriveStore. Delay: 2

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', True)])
Thor money: 20
Thor thirst: 37
Thor hunger: 31
Thor fatigue: 31
Thor social: 18

¤--> Monday 17:00, Update loop: 19

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', True)])
Thor money: 20
Thor thirst: 37
Thor hunger: 31
Thor fatigue: 31
Thor social: 18

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', True)])
Thor money: 20
Thor thirst: 35
Thor hunger: 30
Thor fatigue: 30
Thor social: 15

¤--> Monday 18:00, Update loop: 20

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', True)])
Thor money: 20
Thor thirst: 35
Thor hunger: 30
Thor fatigue: 30
Thor social: 15

<update>
At loop 20, Hulk recieved message from Hulk with message: MSG.ArriveStore. Dispatch time: 20
<class 'entity_hulk.Hulk'> transition from <class 'entity_hulk.HulkTraverse'> to <class 'entity_hulk.HulkAtStore'>
<class 'entity_hulk.Hulk'> transition from <class 'entity_hulk.HulkAtStore'> to <class 'entity_hulk.HulkTraverse'>
At loop 20, Hulk sent message to Hulk with message: MSG.ArriveHome. Delay: 2
At loop 20, Rocket sent message to Rocket with message: MSG.WakeUp. Delay: 0
<class 'entity_rocket.Rocket'> reverting from <class 'entity_rocket.RocketAtHomeSleep'> to <class 'entity_rocket.RocketAtHome'>
<class 'entity_rocket.Rocket'> transition from <class 'entity_rocket.RocketAtHome'> to <class 'entity_rocket.RocketTraverse'>
At loop 20, Rocket sent message to Rocket with message: MSG.ArriveWork. Delay: 2

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', True)])
Thor money: 20
Thor thirst: 33
Thor hunger: 29
Thor fatigue: 29
Thor social: 12

¤--> Monday 19:00, Update loop: 21

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', True)])
Thor money: 20
Thor thirst: 33
Thor hunger: 29
Thor fatigue: 29
Thor social: 12

<update>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', True)])
Thor money: 20
Thor thirst: 31
Thor hunger: 28
Thor fatigue: 28
Thor social: 9

¤--> Monday 20:00, Update loop: 22

<Pre vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', True)])
Thor money: 20
Thor thirst: 31
Thor hunger: 28
Thor fatigue: 28
Thor social: 9

<update>
At loop 22, Hulk recieved message from Hulk with message: MSG.ArriveHome. Dispatch time: 22
<class 'entity_hulk.Hulk'> transition from <class 'entity_hulk.HulkTraverse'> to <class 'entity_hulk.HulkAtHome'>
At loop 22, Rocket recieved message from Rocket with message: MSG.ArriveWork. Dispatch time: 22
<class 'entity_rocket.Rocket'> transition from <class 'entity_rocket.RocketTraverse'> to <class 'entity_rocket.RocketAtWork'>
<class 'entity_hulk.Hulk'> transition from <class 'entity_hulk.HulkAtHome'> to <class 'entity_hulk.HulkAtHomeDinner'>
<class 'entity_hulk.Hulk'> reverting from <class 'entity_hulk.HulkAtHomeDinner'> to <class 'entity_hulk.HulkAtHome'>

<Post vals>
Thor global state: <class 'entity_thor.ThorGlobalstate'>
Thor current state: <class 'entity_thor.ThorAtHome'>
Thor previous state: <class 'entity_thor.ThorTraverse'>
Thor location: Town sqaure
Thor inventory: dict_items([('MJOLNIR', True)])
Thor money: 20
Thor thirst: 29
Thor hunger: 27
Thor fatigue: 27
Thor social: 6

